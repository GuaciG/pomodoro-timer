{"version":3,"sources":["components/Header.js","components/SetTimer.js","components/DisplayTimer.js","components/Controls.js","components/Footer.js","PomodoroApp.js","index.js"],"names":["Header","id","role","aria-label","SetTimer","type","title","value","handleSetTimers","className","onClick","class","DisplayTimer","modeType","time","Controls","active","handleReset","handlePlayPause","style","fontSize","Footer","href","target","rel","PomodoroApp","props","increment","state","newValue","setState","sessionDefault","breakDefault","handleResetButton","timerMode","touched","audio","pause","currentTime","clearInterval","pomodoro","handlePlayPauseButton","setInterval","setSecondsToMs","seconds","min","Math","floor","sec","bind","prevProps","prevState","this","play","src","ref","el","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fad4e1ed.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\n\r\nconst Header = () => {\r\n    return( \r\n      <h1 id=\"heading\">\r\n        <span role='img' aria-label=\"tomato\">üçÖ</span> Pomodoro Clock <span role='img' aria-label=\"tomato\">üçÖ</span>\r\n      </h1>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './SetTimer.css';\r\n\r\nconst SetTimer = ({ type, title, value, handleSetTimers }) => {\r\n    return (\r\n      <div className='SetTimers'>\r\n        <div id={`${type}-label`}>{title}</div>\r\n        <div className='SetTimer-Buttons'>\r\n          <button id={`${type}-decrement`} onClick={() => handleSetTimers(false, `${type}Default`)}>\r\n            <i class=\"fas fa-caret-down\" />\r\n          </button>\r\n          <div id={`${type}-length`}>{value}</div>\r\n          <button id={`${type}-increment`} onClick={() => handleSetTimers(true, `${type}Default`)}>\r\n            <i class=\"fas fa-caret-up\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default SetTimer;\r\n","import React from 'react';\r\nimport './DisplayTimer.css';\r\n\r\nconst DisplayTimer = ({ modeType, time }) => {\r\n    return(\r\n      <div className='Timer'>\r\n        <h1 id='timer-label'>{modeType === 'session' ? 'Session' : 'Break'}</h1>\r\n        <h1 id='time-left'>{time}</h1>\r\n      </div>\r\n    ); \r\n}\r\n\r\nexport default DisplayTimer;","import React from 'react';\r\nimport './Controls.css';\r\n\r\nconst Controls = ({ active, handleReset, handlePlayPause }) => {\r\n    return (\r\n      <div className='Controls'>\r\n        <button id='start_stop' onClick={handlePlayPause} style={{fontSize: 17}}>\r\n          { active ? <span><i class=\"fas fa-pause-circle\"></i></span> : <span><i class=\"fas fa-play-circle\"></i></span> }\r\n        </button>\r\n        <button id='reset' onClick={handleReset}><i class=\"fas fa-undo\"></i></button>\r\n     </div>\r\n    );\r\n}\r\n\r\nexport default Controls;\r\n  ","import React from 'react';\r\nimport './Footer.css';\r\n\r\n\r\nconst Footer = () => {\r\n    return( \r\n        <footer> \r\n            <p>&#9400; 2020 Guaci Guti√©rrez&#8194; &bull; &#8194;<a href=\"https://guacig.github.io/\" target=\"_blank\" rel=\"noreferrer\">Portfolio</a></p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport SetTimer from \"./components/SetTimer\";\r\nimport DisplayTimer from \"./components/DisplayTimer\";\r\nimport Controls from \"./components/Controls\";\r\nimport Footer from \"./components/Footer\";\r\nimport \"./PomodoroApp.css\";\r\n\r\nclass PomodoroApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      breakDefault: 5,\r\n      sessionDefault: 25,\r\n      timerMode: \"session\",\r\n      time: 1500,\r\n      active: false,\r\n      touched: false,\r\n    };\r\n\r\n    this.handleSetTimers = this.handleSetTimers.bind(this);\r\n    this.handleResetButton = this.handleResetButton.bind(this);\r\n    this.handlePlayPauseButton = this.handlePlayPauseButton.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.time === 0 && prevState.timerMode === \"session\") {\r\n      this.setState({\r\n        time: this.state.breakDefault * 60,\r\n        timerMode: \"break\",\r\n      });\r\n      this.audio.play();\r\n    }\r\n    if (prevState.time === 0 && prevState.timerMode === \"break\") {\r\n      this.setState({\r\n        time: this.state.sessionDefault * 60,\r\n        timerMode: \"session\",\r\n      });\r\n      this.audio.play();\r\n    }\r\n  }\r\n\r\n  handleSetTimers = (increment, type) => {\r\n    if (increment && this.state[type] === 60) return;\r\n    if (!increment && this.state[type] === 1) return;\r\n    let newValue = this.state[type] + (increment ? 1 : -1);\r\n    if (type === \"sessionDefault\") {\r\n      this.setState({\r\n        sessionDefault: newValue,\r\n        time: newValue * 60,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        breakDefault: newValue,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleResetButton = () => {\r\n    this.setState({\r\n      breakDefault: 5,\r\n      sessionDefault: 25,\r\n      time: 1500,\r\n      timerMode: \"session\",\r\n      touched: false,\r\n      active: false,\r\n    });\r\n    this.audio.pause();\r\n    this.audio.currentTime = 0;\r\n    clearInterval(this.pomodoro);\r\n  };\r\n\r\n  handlePlayPauseButton = () => {\r\n    if (this.state.active) {\r\n      clearInterval(this.pomodoro);\r\n      this.setState({\r\n        active: false,\r\n      });\r\n    } else {\r\n      if (this.state.touched) {\r\n        this.pomodoro = setInterval(\r\n          () => this.setState({ time: this.state.time - 1 }),\r\n          1000\r\n        );\r\n        this.setState({ active: true });\r\n      } else {\r\n        this.setState(\r\n          {\r\n            time: this.state.sessionDefault * 60,\r\n            touched: true,\r\n            active: true,\r\n          },\r\n          () =>\r\n            (this.pomodoro = setInterval(\r\n              () => this.setState({ time: this.state.time - 1 }),\r\n              1000\r\n            ))\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  setSecondsToMs = (seconds) => {\r\n    let min = Math.floor(seconds / 60);\r\n    let sec = seconds - min * 60;\r\n\r\n    if (min < 10) {\r\n      min = \"0\" + min;\r\n    }\r\n    if (sec < 10) {\r\n      sec = \"0\" + sec;\r\n    }\r\n\r\n    return min + \":\" + sec;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app-container\">\r\n        <Header />\r\n        <div className=\"app-wrapper\">\r\n          <div className=\"timers-wrapper\">\r\n            <SetTimer\r\n              type=\"break\"\r\n              title=\"Break Length\"\r\n              value={this.state.breakDefault}\r\n              handleSetTimers={this.handleSetTimers}\r\n            />\r\n            <SetTimer\r\n              type=\"session\"\r\n              title=\"Session Length\"\r\n              value={this.state.sessionDefault}\r\n              handleSetTimers={this.handleSetTimers}\r\n            />\r\n          </div>\r\n          <DisplayTimer\r\n            modeType={this.state.timerMode}\r\n            time={this.setSecondsToMs(this.state.time)}\r\n          />\r\n          <Controls\r\n            active={this.state.active}\r\n            handlePlayPause={this.handlePlayPauseButton}\r\n            handleReset={this.handleResetButton}\r\n          />\r\n          <audio\r\n            id=\"beep\"\r\n            src=\"https://res.cloudinary.com/drpcjt13x/video/upload/v1599590677/Proyectos/Pomodoro%20Clock/bells003_ne9dwp.wav\"\r\n            ref={(el) => (this.audio = el)}\r\n          ></audio>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PomodoroApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport PomodoroApp from './PomodoroApp';\r\n\r\n\r\nReactDOM.render(<PomodoroApp />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}